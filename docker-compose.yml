version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: bracongo_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/scripts:/var/www/docker/scripts
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=bracongo_stages
      - DB_USERNAME=bracongo_user
      - DB_PASSWORD=bracongo_pass_2024
      - APP_ENV=local
    networks:
      - bracongo_network
    depends_on:
      - mysql
      - redis
    command: ["/var/www/docker/scripts/init-app.sh"]

  nginx:
    image: nginx:alpine
    container_name: bracongo_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - bracongo_network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: bracongo_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: bracongo_stages
      MYSQL_ROOT_PASSWORD: bracongo_root_2024
      MYSQL_PASSWORD: bracongo_pass_2024
      MYSQL_USER: bracongo_user
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - bracongo_network

  redis:
    image: redis:7-alpine
    container_name: bracongo_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - bracongo_network

  mailpit:
    image: axllent/mailpit
    container_name: bracongo_mailpit
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - bracongo_network

  node:
    image: node:18-alpine
    container_name: bracongo_node
    working_dir: /var/www
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www
    networks:
      - bracongo_network
    command: sh -c "npm install && npm run dev"

  queue:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: bracongo_queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - bracongo_network
    depends_on:
      - mysql
      - redis
    command: php artisan queue:work redis --sleep=3 --tries=3 --timeout=60

networks:
  bracongo_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local 