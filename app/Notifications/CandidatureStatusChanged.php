<?php

namespace App\Notifications;

use App\Models\Candidature;
use App\Enums\StatutCandidature;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Notification;

class CandidatureStatusChanged extends Notification implements ShouldQueue
{
    use Queueable;

    public function __construct(
        public Candidature $candidature,
        public StatutCandidature $ancienStatut,
        public StatutCandidature $nouveauStatut
    ) {}

    public function via($notifiable): array
    {
        return ['mail'];
    }

    public function toMail($notifiable): MailMessage
    {
        $candidature = $this->candidature;
        $nouveauStatut = $this->nouveauStatut;
        
        $message = (new MailMessage)
            ->subject("Mise Ã  jour de votre candidature - {$nouveauStatut->getLabel()}")
            ->greeting("Bonjour {$candidature->prenom},")
            ->line("Nous vous informons que le statut de votre candidature a Ã©tÃ© mis Ã  jour.");

        // Contenu spÃ©cifique selon le statut
        switch ($nouveauStatut) {
            case StatutCandidature::ANALYSE_DOSSIER:
                $message->line("Votre dossier est actuellement en cours d'analyse par nos Ã©quipes.")
                    ->line("Nous vous tiendrons informÃ© des prochaines Ã©tapes.");
                break;

            case StatutCandidature::ATTENTE_TEST:
                $message->line("Votre candidature a Ã©tÃ© retenue pour la phase de test.")
                    ->line("Vous recevrez prochainement les dÃ©tails concernant les tests Ã  effectuer.");
                break;

            case StatutCandidature::ATTENTE_RESULTATS:
                $message->line("Vos tests ont Ã©tÃ© reÃ§us et sont en cours d'Ã©valuation.")
                    ->line("Nous vous communiquerons les rÃ©sultats dans les plus brefs dÃ©lais.");
                break;

            case StatutCandidature::ATTENTE_AFFECTATION:
                $message->line("FÃ©licitations ! Votre candidature a Ã©tÃ© validÃ©e.")
                    ->line("Nous recherchons actuellement le poste le plus adaptÃ© Ã  votre profil.");
                break;

            case StatutCandidature::VALIDE:
                $message->line("ðŸŽ‰ FÃ©licitations ! Votre candidature a Ã©tÃ© acceptÃ©e !")
                    ->line("DÃ©tails de votre stage :")
                    ->line("â€¢ DÃ©but : " . $candidature->date_debut_stage->format('d/m/Y'))
                    ->line("â€¢ Fin : " . $candidature->date_fin_stage->format('d/m/Y'))
                    ->line("â€¢ Poste : " . $candidature->poste_souhaite)
                    ->action('Voir les dÃ©tails', url("/suivi/{$candidature->code_suivi}"));
                break;

            case StatutCandidature::REJETE:
                $message->line("Nous regrettons de vous informer que votre candidature n'a pas pu Ãªtre retenue.")
                    ->line("Motif : " . ($candidature->motif_rejet ?? 'Non spÃ©cifiÃ©'))
                    ->line("Nous vous encourageons Ã  postuler Ã  d'autres opportunitÃ©s futures.");
                break;
        }

        return $message
            ->line("Code de suivi : {$candidature->code_suivi}")
            ->action('Suivre ma candidature', url("/suivi/{$candidature->code_suivi}"))
            ->line("Merci de votre intÃ©rÃªt pour BRACONGO Stages !")
            ->salutation("Cordialement,\nL'Ã©quipe BRACONGO Stages");
    }

    public function toArray($notifiable): array
    {
        return [
            'candidature_id' => $this->candidature->id,
            'ancien_statut' => $this->ancienStatut->value,
            'nouveau_statut' => $this->nouveauStatut->value,
            'code_suivi' => $this->candidature->code_suivi,
        ];
    }
} 